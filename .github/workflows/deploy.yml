name: CI/CD Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy-frontend:
    name: Deploy to Hugging Face Spaces
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Push frontend to Hugging Face
        run: |
          git config --global user.name "Your Name"
          git config --global user.email "you@example.com"
          cd frontend
          git init
          git checkout -b main  # ðŸ‘ˆ Create the main branch
          git remote add origin https://huggingface.co/spaces/chbsaikiran/Chat_With_PDF
          git add .
          git commit -m "Auto deploy frontend"
          git push --force https://chbsaikiran:${{ secrets.HF_TOKEN }}@huggingface.co/spaces/chbsaikiran/Chat_With_PDF main

  deploy-backend:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Ensure Git is initialized
            if [ ! -d ".git" ]; then
              echo "Initializing Git repo locally"
              git init
            fi
            
            if [ ! -d "backend" ]; then
              echo "Missing 'backend' directory. Aborting."
              exit 1
            fi
            cd backend

            # Install python3.10-venv if not available
            if ! python3.10 -m venv --help > /dev/null 2>&1; then
              sudo apt update
              sudo apt install -y python3.10-venv
            fi
      
            # Set up virtual environment
            python3.10 -m venv venv310
            source venv310/bin/activate
      
            # Ensure requirements.txt exists
            if [ ! -f "requirements.txt" ]; then
              echo "requirements.txt not found! Aborting."
              exit 1
            fi
      
            # Install dependencies
            pip install --upgrade pip
            pip install -r requirements.txt
            python app.py
      
            # Add your app-specific start command below (e.g., gunicorn or python main.py)
            echo "Deployment successful"
